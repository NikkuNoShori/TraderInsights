/**
 * SnapTrade API types
 * This file defines types for the SnapTrade API integration
 */

import type {
  BrokerageAuthorization,
  Account as SDKAccount,
  Position as SDKPosition,
  Balance as SDKBalance,
  AccountOrderRecord,
  AccountHoldingsAccount,
  Brokerage,
  PositionSymbol,
  BalanceCurrency,
} from "snaptrade-typescript-sdk";

/**
 * SnapTrade configuration
 */
export interface SnapTradeConfig {
  clientId: string;
  consumerKey: string; // Used for both frontend and backend authentication
  redirectUri?: string; // Optional since it's generated by SnapTrade
  isDemo?: boolean;
}

/**
 * SnapTrade user
 * Ensuring userId and userSecret are required
 */
export interface SnapTradeUser {
  userId: string;
  userSecret: string;
}

/**
 * SnapTrade connection status
 */
export type ConnectionStatus = "connected" | "disconnected" | "pending";

/**
 * SnapTrade connection
 */
export type SnapTradeConnection = BrokerageAuthorization;

/**
 * SnapTrade account
 */
export type SnapTradeAccount = SDKAccount;

/**
 * SnapTrade position
 */
export type SnapTradePosition = SDKPosition;

/**
 * SnapTrade balance
 */
export type SnapTradeBalance = SDKBalance;

/**
 * SnapTrade order
 */
export type SnapTradeOrder = AccountOrderRecord;

/**
 * SnapTrade holdings
 */
export type SnapTradeHoldings = AccountHoldingsAccount;

/**
 * SnapTrade brokerage
 */
export type SnaptradeBrokerage = Brokerage;

export interface ConnectionOptions {
  immediateRedirect?: boolean;
  connectionType?: "read" | "trade";
  connectionPortalVersion?: "v4";
  reconnect?: string;
}

export interface SnapTradeError extends Error {
  code?: string;
  details?: unknown;
}

export interface ConnectionLinkResponse {
  redirectURI: string;
  sessionId: string;
  status?: string;
}

export type BrokerageList = Brokerage[]; 